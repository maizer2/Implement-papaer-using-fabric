model:
  target: models.viton.Lit_viton
  params:
    lr: 1e-4
    sampling_step: 5
    num_sampling: 20
    optim_name: AdamW
    model_name: ladi_vton
    model_args:
      stage: tryon
      dataset_name: dresscode
      in_channels: 31
      num_inference_steps: 50
      cloth_warpping: True
      cloth_refinement: True
      scheduler_config:
        target: diffusers.schedulers.scheduling_ddim.DDIMScheduler
        params:
          num_train_timesteps: 1000
      emasc_config:
        target: models.VITON.ladi_vton.models.emasc.EMASC
        params:
          in_channels: [128, 128, 128, 256, 512]
          out_channels: [128, 256, 512, 512, 512]
          kernel_size: 3
          padding: 1
          stride: 1
          type: nonlinear # linear, nonlinear
          model_path: checkpoints/viton/ladi_vton/DressCode/emasc_dresscode.pth
      inversion_adapter_config:
        num_encoder_layers: 1
        num_vstar: 16
        model_path: checkpoints/viton/ladi_vton/DressCode/inversion_adapter_dresscode.pth


logger:
  logger_path: checkpoints/viton/ladi_vton/DressCode/tryon
    
lightning:
  trainer:
    strategy: ddp_find_unused_parameters_True
    # precision: 16-mixed
    max_epochs: 100000
    sync_batchnorm: True
    # devices: [0]
  earlystop_params:
    monitor: val/loss
    mode: min
  monitor_params:
    logging_interval: step

dataset:
  height: &height 512
  width: &width 384
  num_workers: 6
  batch_size: 16
  train:
    target: &data_target dataloader.dresscode.DressCodeDataset
    params:
      size: [*height, *width]
      dataroot_path: &dataroot_path data/DressCode
      phase: train
      category: &data_category
      - upper_body
      - lower_body
      - dresses
      outputlist: &data_outputlist
      - c_name
      - im_name
      - image
      - cloth
      - inpaint_mask
      - pose_map
      - im_head
      - im_pose
      - im_cloth
      - category
      - im_mask
  val:
    target: *data_target
    params:
      size: [*height, *width]
      dataroot_path: *dataroot_path
      phase: val
      category: *data_category
      outputlist: *data_outputlist
  test:
    target: *data_target
    params:
      size: [*height, *width]
      phase: test
      order: paired
      dataroot_path: *dataroot_path
      category: *data_category
      outputlist: *data_outputlist